name: ObjectFactory

on:
  push:
    branches: [ main, build, releases/** ]
  pull_request:
    branches: [ main, releases/** ]
  # workflow_dispatch: allows manually kicking off a build
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  buildAndDeploy:

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      max-parallel: 3
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Create GitHub NuGet Source
      run: |
       dotnet nuget add source --username $env:GITHUB_REPOSITORY_OWNER --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/$($env:GITHUB_REPOSITORY_OWNER.ToLower())/index.json"

    - name: Determine Version
      run: |
        $inVersion = $false
        $version = ''
        'releaseNotes<<EOF_EOF_EOF' | Out-File $env:GITHUB_ENV -Append -Encoding utf8
        $releaseNotes = ''
        foreach ( $line in (Get-Content .\CHANGELOG.md)) {
            if ($line -match '^## \[([\d\.]+)\]') {
                if ($inVersion) {break}
                $version = $Matches[1]
                $inVersion = $true;
            }
            if ($inVersion) {$releaseNotes += $line + "`n"}
        }
        $releaseNotes | Out-File $env:GITHUB_ENV -Append -Encoding utf8
        "EOF_EOF_EOF" | Out-File $env:GITHUB_ENV -Append -Encoding utf8

        if ($env:branch -ne 'refs/heads/main') {
            $version += ".$env:runNumber-prerelease" # prerelease is the run number since PR has save version
        }
        "version=$version written to $env:GITHUB_ENV"
        "version=$version" | Out-File $env:GITHUB_ENV -Append -Encoding utf8

    - name: Dump Environment
      run: |
       "::group::Pwsh Version"
       $PSVersionTable
       "::endgroup::"

       "::group::Environment Variables"
       gci env: | ft -wrap
       "::endgroup::"

    - name: Do CI Build and Test
      run: |
        ./run.ps1 ci -Version $env:version
      env:
       Version: ${{ env.Version }}

    - name: Upload to CodeCov
      if: ${{ matrix.os == 'ubuntu-latest'}}
      shell: bash
      working-directory: tests/unit
      run: |
        export CODECOV_TOKEN="${{ secrets.CODECOV }}"
        bash <(curl -s https://codecov.io/bash)

    - name: Publish to NuGet.org
      if: (github.ref_name == 'main' || (github.base_ref == 'main' && github.event_name == 'pull_request')) && matrix.os == 'ubuntu-latest'
      run: |
       "Publishing ./packages/Seekatar.Tools.$env:version.nupkg to Nuget.org"
       dotnet nuget push "./packages/Seekatar.Tools.$env:version.nupkg" --api-key ${{ secrets.NUGET_ORG_PAT }} --source "https://api.nuget.org/v3/index.json"
      env:
       Version: ${{ env.Version }}
